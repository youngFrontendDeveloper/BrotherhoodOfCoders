Часть 1 (Теория)
ЗАДАНИЕ:

В качестве ответа принимается md/txt файл с текстом

Написать что выводит данный код. Предложите 2 варианта модификации кода, чтобы ответ был следующим: Bad: 10, Bad: 12,
Good: 15, Good: 21

const arr =[10,12,15,21];

for (var i = 0; i < arr.length; i++) {
  setTimeout(() => {
    console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
  }, 3000);
}

ОТВЕТ:
Данный код выведет Bad: undefined Поскольку вывод в консоли находится внутри асинхронной функции setTimeout, которая
сработает через 3 сек., то цикл проходит по всему массиву, и значение переменной i станет равно 4. Через 3 сек.,
отработает setTimeout (при i = 4)  и попытается вывести arr[4], которое равно undefined. Значение undefined попадает в
тернарный оператор, который преобразует его в false. И поскольку условие ложно - тернарный оператор выведет последнее
выражение `Bad: ${arr[i]}` или `Bad: undefined`

1 вариант:
Помещаем функцию Timeout внутрь функции с немедленным вызовом (IIFE), которая будет выполняться на каждой итерации цикла.

const arr =[10,12,15,21];

for (var i = 0; i < arr.length; i++) {
(function (index){
  setTimeout(() => {
    console.log(arr[index] > 13 ? `Good: ${arr[index]}` : `Bad: ${arr[index]}`);
  }, 3000);
} )(i)
}

2 вариант:

Переменную i обозначаем через let

const arr =[10,12,15,21];

for (let i = 0; i < arr.length; i++) {
  setTimeout(() => {
    console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
  }, 3000);
}

Переменная var - глобальная и одна на все итерации цикла, и она видна после окончания цикла со значением 4.
А переменная let в отличие от var создается при каждой итерации цикла и в замыкании будет та переменная, которая была при соответствующей итерации, т.е. в setTimeout будет i = 0, потом i = 1, потом i = 2 и i = 3. Следовательно, arr[i] примет значения 10, 12, 15, 21, и в console.log выведется последовательно Bad: 10, Bad: 12, Good: 15, Good: 21